{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location to which to deploy all resources."
      },
      "defaultValue": "East US",
      "allowedValues": [
        "East Asia",
        "Southeast Asia",
        "Central US",
        "East US",
        "East US 2",
        "West US",
        "North Central US",
        "South Central US",
        "North Europe",
        "West Europe",
        "Japan West",
        "Japan East",
        "Brazil South",
        "Australia East",
        "Australia Southeast",
        "South India",
        "Central India",
        "West India",
        "Canada Central",
        "Canada East",
        "UK South",
        "UK West",
        "West Central US",
        "West US 2",
        "Korea Central",
        "Korea South",
        "France Central",
        "France South",
        "Australia Central",
        "Australia Central 2"
      ]
    },
    "site_name": {
      "type": "string",
      "metadata": {
        "description": "Name of the Function to create. Will end up looking like <site_name>.azurewebsites.net. Must be unique."
      }
    },
    "repo_url": {
      "defaultValue": "https://github.com/bc3tech/WemoStandbyAutoOff.git",
      "type": "string",
      "metadata": {
        "description": "Git repository to use as source code"
      }
    },
    "repo_branch": {
      "defaultValue": "master",
      "type": "string",
      "metadata": {
        "description": "Branch of the Git repository to use as source code"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS"
      ],
      "metadata": {
        "description": "Storage Account type (LRS = Cheapest)"
      }
    }
  },
  "variables": {
    "plan_name": "[concat(parameters('site_name'), 'Plan')]",
    "storageAccount_name": "[parameters('site_name')]",
    "insights_name": "[parameters('site_name')]",
    "fooName": "[concat('foo', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "microsoft.insights/components",
      "kind": "web",
      "name": "[variables('insights_name')]",
      "apiVersion": "2015-05-01",
      "location": "southcentralus",
      "tags": {
        "applicationType": "web"
      },
      "scale": null,
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "AppServiceEnablementCreate",
        "HockeyAppId": null,
        "SamplingPercentage": null
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "Standard"
      },
      "kind": "Storage",
      "name": "[variables('storageAccount_name')]",
      "apiVersion": "2018-07-01",
      "location": "[parameters('location')]",
      "tags": {},
      "scale": null,
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": false,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "name": "[variables('plan_name')]",
      "apiVersion": "2016-09-01",
      "location": "[parameters('location')]",
      "scale": null,
      "properties": {
        "name": "[variables('plan_name')]",
        "workerTierName": null,
        "adminSiteName": null,
        "hostingEnvironmentProfile": null,
        "perSiteScaling": false,
        "reserved": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Web/sites",
      "kind": "functionapp",
      "name": "[parameters('site_name')]",
      "apiVersion": "2016-08-01",
      "location": "[parameters('location')]",
      "identity": null,
      "tags": {},
      "scale": null,
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('site_name'),'.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('site_name'),'.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('plan_name'))]",
        "reserved": false,
        "siteConfig": {
          "ftpsState": "Disabled",
          "phpVersion": "off",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccount_name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount_name')),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccount_name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount_name')),'2015-05-01-preview').key1)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('insights_name')), '2014-04-01').InstrumentationKey]"
            }
          ]
        },
        "scmSiteAlsoStopped": false,
        "hostingEnvironmentProfile": null,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "cloningInfo": null,
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('plan_name'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount_name'))]",
        "[resourceId('Microsoft.Insights/components', variables('insights_name'))]"
      ],
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('site_name'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('repo_url')]",
            "branch": "[parameters('repo_branch')]",
            "IsManualIntegration": true
          }
        }
      ]
    }
  ]
}